{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetButtonVisible","visibleGoods","goods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","current","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAuBL,GAAcG,IAAaP,EAASM,KAmB3DI,EApDR,SACEC,EADF,GAGG,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOC,GAEzB,OAAQJ,GACN,KAAKP,EAASY,SACZF,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAE1B,MAEF,KAAKf,EAASiB,OACZP,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAYpC,OAJId,GACFM,EAAaS,UAGRT,EAyBcU,CACnBnB,EACA,CAAEG,aAAYG,aAGhB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYhB,IAAaP,EAASY,WAEtCY,QA/Be,WACrBhB,EAAYR,EAASY,WAwBjB,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYhB,IAAaP,EAASiB,SAEtCO,QAtCa,WACnBhB,EAAYR,EAASiB,SA+BjB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAanB,IAEjBoB,QA7Ca,WACnBnB,GAAc,SAAAoB,GAAO,OAAKA,MAsCtB,qBAWChB,GACC,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAlDS,WACjBhB,EAAYR,EAASM,MACrBD,GAAc,IA6CR,sBASJ,oBAAIgB,UAAU,QAAd,SACGX,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0c4034b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.localeCompare(secondGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isResetButtonVisible = isReversed || sortType !== SortType.NONE;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseGoods = () => {\n    setIsReversed(current => !current);\n  };\n\n  const resetState = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetState}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul className=\"goods\">\n        {visibleGoods.map(item => (\n          <li data-cy=\"Good\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}